<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pBoxUser.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAH//Z
</value>
  </data>
</root>